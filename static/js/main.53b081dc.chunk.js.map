{"version":3,"sources":["components/Button.js","config/firebase.js","components/Message.js","components/Channel.js","login/signInWithGoogle.js","login/signOut.js","hooks/useAuthState.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","estilos","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","formatDate","date","formattedDate","formatRelative","Date","charAt","toUpperCase","slice","Message","createdAt","text","displayName","photoURL","src","alt","title","seconds","Channel","user","useState","messages","setMessages","useEffect","collection","orderBy","limit","onSnapshot","querySnapshot","data","docs","map","doc","id","uid","newMessage","setNewMessage","messagesRef","inputRef","useRef","current","focus","message","onSubmit","e","preventDefault","trimmedMessage","trim","add","FieldValue","serverTimestamp","ref","type","value","onChange","target","placeholder","autoComplete","disabled","signInWithGoogle","a","useDeviceLanguage","signInWithPopup","console","error","signOut","useAuthState","initializing","setInitializing","setUser","onAuthStateChanged","App","renderLoading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53b081dc.chunk.js","sourcesContent":["\r\nconst Button = ({ onClick = null, children = null, estilos=null }) => (\r\n  <><button className={ estilos } onClick={onClick} >\r\n    {children}\r\n  </button>\r\n  </>\r\n\r\n\r\n);\r\n\r\nexport default Button;\r\n","import firebase from \"firebase\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAGGAnxt7K7M6veKv1NwSpiWcvNaKtepSg\",\r\n    authDomain: \"firechat-573dd.firebaseapp.com\",\r\n    projectId: \"firechat-573dd\",\r\n    storageBucket: \"firechat-573dd.appspot.com\",\r\n    messagingSenderId: \"1001828762594\",\r\n    appId: \"1:1001828762594:web:4de46c43251452b99f6fbb\",\r\n    measurementId: \"G-VEM8BM94KN\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { formatRelative } from \"date-fns\";\r\n\r\nconst formatDate = (date) => {\r\n    let formattedDate = \"\";\r\n    if (date) {\r\n        formattedDate = formatRelative(date, new Date());\r\n\r\n        formattedDate =\r\n            formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n    return formattedDate;\r\n};\r\n\r\nconst Message = ({\r\n    createdAt = null,\r\n    text = \"\",\r\n    displayName = \"\",\r\n    photoURL = \"\",\r\n}) => {\r\n    if (!text) return null;\r\n    return (\r\n        <div className=\"user\">\r\n            {photoURL ? (\r\n                <img\r\n                    className=\"photo-user\"\r\n                    src={photoURL}\r\n                    alt=\"Avatar\"\r\n                    title=\"{text}\"\r\n                />\r\n            ) : null}\r\n            {displayName ? <span className=\"name-user\">{displayName}</span> : null}\r\n            {createdAt?.seconds ? (\r\n                <span className=\"date-user\">\r\n                    {formatDate(new Date(createdAt.seconds * 1000))}\r\n                </span>\r\n            ) : null}\r\n            <p className=\"mensaje-user\">{text}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { db, firebase } from \"../config/firebase\";\r\nimport Message from \"./Message\";\r\n\r\n\r\nconst Channel = ({ user = null }) => {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const query = db.collection(\"messages\").orderBy(\"createdAt\").limit(100);\r\n\r\n        const unsubscribe = query.onSnapshot((querySnapshot) => {\r\n            //Obtiene todos los mensajes desde la bd con su ID.\r\n            const data = querySnapshot.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id: doc.id,\r\n            }));\r\n            // Actualizo los mensajes obtenidos desde la bd.\r\n            setMessages(data);\r\n        });\r\n        //CleanUp\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const { uid, displayName, photoURL } = user;\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const handleMessageOnChange = (e) => {\r\n        e.preventDefault();\r\n        setNewMessage(e.target.value);\r\n    };\r\n\r\n    const messagesRef = db.collection(\"messages\");\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const trimmedMessage = newMessage.trim();\r\n        if (trimmedMessage) {\r\n            messagesRef.add({\r\n                text: trimmedMessage,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                uid,\r\n                displayName,\r\n                photoURL,\r\n            });\r\n            setNewMessage(\"\");\r\n        }\r\n    };\r\n\r\n    const inputRef = useRef();\r\n    useEffect(() => {\r\n        if (inputRef.current) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [inputRef]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"messages-container\">\r\n                {messages.map((message) => (\r\n                    <p key={message.id}>\r\n                        <Message {...message} />\r\n                    </p>\r\n                ))}\r\n            </div>\r\n\r\n            <form className=\"form\" onSubmit={handleOnSubmit}>\r\n                <input\r\n                    className=\"mensaje\"\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={handleMessageOnChange}\r\n                    placeholder=\"Escribe tu mensaje aqui...\"\r\n                    autoComplete=\"off\"\r\n                />\r\n\r\n                {/* <button className=\"btn-emoji\"></button> */}\r\n\r\n                <button\r\n                    className=\"boton btn-send\"\r\n                    type=\"submit\"\r\n                    disabled={!newMessage}\r\n                >\r\n                    {\" \"}\r\n          Enviar{\" \"}\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Channel;\r\n","import {firebase, googleAuthProvider } from '../config/firebase';\r\n\r\n\r\nconst signInWithGoogle  = async () => {\r\n    firebase.auth().useDeviceLanguage();\r\n\r\n    try {\r\n        await firebase.auth().signInWithPopup(googleAuthProvider);\r\n    }\r\n    catch (e) {\r\n        console.error(e.message);\r\n    }\r\n\r\n};\r\nexport default signInWithGoogle;","import { firebase } from '../config/firebase';\r\n\r\nconst signOut = async () => {\r\n    try {\r\n        await firebase.auth().signOut();\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nexport default signOut;","import { useState, useEffect } from \"react\";\r\n\r\nfunction useAuthState(auth) {\r\n    const [initializing, setInitializing] = useState(true);\r\n    const [user, setUser] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubcribe = auth.onAuthStateChanged((user) => {\r\n            if (user) setUser(user);\r\n            else setUser(false);\r\n\r\n            if (initializing) setInitializing(false);\r\n        });\r\n\r\n        return unsubcribe;\r\n    }, [auth, initializing]);\r\n\r\n    return { user, initializing };\r\n}\r\n\r\nexport default useAuthState;\r\n","import { Button, Channel } from \"./components\";\r\nimport { signOut, signInWithGoogle } from \"./login\";\r\nimport { useAuthState } from \"./hooks\";\r\nimport { firebase } from \"./config/firebase\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const { initializing, user } = useAuthState(firebase.auth());\r\n\r\n\r\n  const renderLoading = () => {\r\n    if (initializing) {\r\n      return <div>\r\n        <h1>Cargando Espera ...</h1>\r\n      </div>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {renderLoading()}\r\n      {\r\n        user ? (\r\n          <p>\r\n            <Button onClick={signOut} estilos=\"salir\" > Salir</Button>\r\n            <h2> Bienvenidos al Chat!</h2>\r\n            <br />\r\n\r\n            <Channel user={user} />\r\n          </p>\r\n        )\r\n          : <p><Button onClick={signInWithGoogle} estilos=\"iniciar\" > Sign in with Google </Button></p>\r\n      }\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/estilos.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}